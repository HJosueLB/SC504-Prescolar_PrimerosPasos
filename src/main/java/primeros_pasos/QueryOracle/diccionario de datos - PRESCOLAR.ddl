-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2024-12-01 11:04:11 PST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE SMALLFILE TABLESPACE tbs_caso1_user1
    DATAFILE 'C:\TABLESPACES-SQL\CASO1.DBF' SIZE 51200K REUSE
    AUTOEXTEND OFF
LOGGING ONLINE DEFAULT NOCOMPRESS NO INMEMORY
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1048576
FLASHBACK ON 
;

CREATE USER prescolar IDENTIFIED BY ACCOUNT UNLOCK ;

CREATE USER ricpat IDENTIFIED BY DEFAULT TABLESPACE USERS PROFILE DEFAULT ACCOUNT UNLOCK ;

CREATE USER rpatino IDENTIFIED BY DEFAULT TABLESPACE USERS PROFILE DEFAULT ACCOUNT UNLOCK ;

CREATE USER system IDENTIFIED BY profile DEFAULT 
    ACCOUNT UNLOCK 
;

GRANT DBA TO SYSTEM 
;

GRANT CREATE TABLE, SELECT ANY TABLE, GLOBAL QUERY REWRITE, CREATE MATERIALIZED VIEW, UNLIMITED TABLESPACE TO SYSTEM 
;

GRANT DEQUEUE ANY QUEUE,
    ENQUEUE ANY QUEUE,
    MANAGE ANY QUEUE
TO system WITH ADMIN OPTION
;

CREATE USER user1 
    IDENTIFIED BY  
    DEFAULT TABLESPACE TBS_CASO1_USER1 
    PROFILE DEFAULT 
    ACCOUNT
unlock;

GRANT dba TO user1;

GRANT
    CREATE SESSION,
    UNLIMITED TABLESPACE
TO user1;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE prescolar.tarea (
    id          NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    description VARCHAR2(200 BYTE) NOT NULL,
    duedate     DATE NOT NULL,
    idgrupo     NUMBER NOT NULL,
    idprofesor  NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.tarea
    ADD CONSTRAINT tarea_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE prescolar.grupo (
    id         NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    nombre     VARCHAR2(10 BYTE) NOT NULL,
    idprofesor NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.grupo
    ADD CONSTRAINT grupo_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.grupo
    ADD CONSTRAINT grupo_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE prescolar.profesor (
    id        NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    firstname VARCHAR2(50 BYTE) NOT NULL,
    lastname  VARCHAR2(50 BYTE) NOT NULL,
    email     VARCHAR2(100 BYTE) NOT NULL,
    password  VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.profesor
    ADD CONSTRAINT profesor_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.profesor
    ADD CONSTRAINT profesor_email_un UNIQUE ( email )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE OR REPLACE PROCEDURE PRESCOLAR.ACTUALIZARTAREA (
    p_codigoTarea IN NUMBER,
    p_descripcion IN VARCHAR2,
    p_fechaLimite IN DATE,
    p_grupo IN VARCHAR2,
    p_profesor IN VARCHAR2 
)
IS
BEGIN
    UPDATE Tarea
    SET
        Description = p_descripcion,
        DueDate = p_fechaLimite,
        IdGrupo = (SELECT Id FROM Grupo WHERE Nombre = p_grupo),  
        IdProfesor = (SELECT Id FROM Profesor WHERE FirstName || ' ' || LastName = p_profesor)  
    WHERE
        Id = p_codigoTarea;   
END;
/

CREATE OR REPLACE PROCEDURE PRESCOLAR.ASIGNARTAREA (
    p_Description IN VARCHAR2,
    p_DueDate IN DATE,
    p_IdGrupo IN NUMBER,
    p_IdProfesor IN NUMBER
) AS
BEGIN
    INSERT INTO Tarea (Description, DueDate, IdGrupo, IdProfesor)
    VALUES (p_Description, p_DueDate, p_IdGrupo, p_IdProfesor);
END;
/

CREATE TABLE prescolar.evento (
    id          NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    nombre      VARCHAR2(100 BYTE) NOT NULL,
    descripcion CLOB,
    fecha       DATE NOT NULL,
    grupo       VARCHAR2(20 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY
    LOB ( descripcion ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

ALTER TABLE prescolar.evento
    ADD CONSTRAINT evento_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT );

CREATE OR REPLACE PROCEDURE PRESCOLAR.CREAREVENTO (
    p_Nombre IN VARCHAR2,
    p_Descripcion IN CLOB,
    p_Fecha IN DATE,
    p_Grupo IN VARCHAR2
) AS
BEGIN
    INSERT INTO Evento (Nombre, Descripcion, Fecha, Grupo)
    VALUES (p_Nombre, p_Descripcion, p_Fecha, p_Grupo);
END;
/

CREATE OR REPLACE PROCEDURE PRESCOLAR.ELIMINARTAREA (
    p_codigoTarea IN NUMBER
)
IS
BEGIN
    DELETE FROM Tarea
    WHERE Id = p_codigoTarea;
END;
/

CREATE OR REPLACE PROCEDURE PRESCOLAR.OBTENERGRUPOS (
    p_grupo OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_grupo FOR
        SELECT Id, Nombre FROM Grupo; 
END;
/

CREATE OR REPLACE PROCEDURE PRESCOLAR.OBTENERPROFESORES (
    p_profesores OUT SYS_REFCURSOR  
) AS
BEGIN
    OPEN p_profesores FOR
        SELECT Id, FirstName, LastName FROM Profesor;
END;
/

CREATE OR REPLACE PROCEDURE PRESCOLAR.OBTENERTAREA(
    p_id IN NUMBER,
    p_result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_result FOR
        SELECT t.Id AS "Código_Tarea", 
               t.Description AS "Descripcion", 
               t.DueDate AS "Fecha_Limite", 
               g.Nombre AS "Grupo",  
               p.FirstName || ' ' || p.LastName AS "Nombre_Profesor" 
        FROM Tarea t
        JOIN Grupo g ON t.IdGrupo = g.Id
        JOIN Profesor p ON t.IdProfesor = p.Id
        WHERE t.Id = p_id;  
END;
/

CREATE TABLE prescolar.anuncio (
    id               NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    title            VARCHAR2(100 BYTE) NOT NULL,
    content          CLOB NOT NULL,
    dateposted       DATE DEFAULT sysdate NOT NULL,
    idgrupo          NUMBER,
    idusuariointerno NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY
    LOB ( content ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

ALTER TABLE prescolar.anuncio
    ADD CONSTRAINT anuncio_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT );

CREATE OR REPLACE PROCEDURE PRESCOLAR.PUBLICARANUNCIO (
    p_Title IN VARCHAR2,
    p_Content IN CLOB,
    p_IdGrupo IN NUMBER,
    p_IdUsuarioInterno IN NUMBER
) AS
BEGIN
    INSERT INTO Anuncio (Title, Content, DatePosted, IdGrupo, IdUsuarioInterno)
    VALUES (p_Title, p_Content, SYSDATE, p_IdGrupo, p_IdUsuarioInterno);
END;
/

CREATE TABLE prescolar.estudiante (
    id          NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    firstname   VARCHAR2(50 BYTE) NOT NULL,
    lastname    VARCHAR2(50 BYTE) NOT NULL,
    dateofbirth DATE NOT NULL,
    idpadre     NUMBER NOT NULL,
    idgrupo     NUMBER
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.estudiante
    ADD CONSTRAINT estudiante_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE OR REPLACE PROCEDURE PRESCOLAR.REGISTRARESTUDIANTE (
    p_FirstName IN VARCHAR2,
    p_LastName IN VARCHAR2,
    p_DateOfBirth IN DATE,
    p_IdPadre IN NUMBER,
    p_IdGrupo IN NUMBER
) AS
BEGIN
    INSERT INTO Estudiante (FirstName, LastName, DateOfBirth, IdPadre, IdGrupo)
    VALUES (p_FirstName, p_LastName, p_DateOfBirth, p_IdPadre, p_IdGrupo);
END;
/

CREATE TABLE prescolar.padredefamilia (
    id        NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    firstname VARCHAR2(50 BYTE) NOT NULL,
    lastname  VARCHAR2(50 BYTE) NOT NULL,
    email     VARCHAR2(100 BYTE) NOT NULL,
    password  VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.padredefamilia
    ADD CONSTRAINT padredefamilia_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.padredefamilia
    ADD CONSTRAINT padredefamilia_email_un UNIQUE ( email )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE OR REPLACE PROCEDURE PRESCOLAR.REGISTRARPADRE (
    p_FirstName IN VARCHAR2,
    p_LastName IN VARCHAR2,
    p_Mail IN VARCHAR2,
    p_Password IN VARCHAR2
) AS
BEGIN
    INSERT INTO PadreDeFamilia (FirstName, LastName, Email, Password)
    VALUES (p_FirstName, p_LastName, p_Mail, p_Password);
END;
/

CREATE TABLE prescolar.estatus (
    id     NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    nombre VARCHAR2(20 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.estatus
    ADD CONSTRAINT estatus_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.estatus
    ADD CONSTRAINT estatus_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE prescolar.matricula (
    id             NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    idestudiante   NUMBER NOT NULL,
    enrollmentdate DATE DEFAULT sysdate NOT NULL,
    idstatus       NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.matricula
    ADD CONSTRAINT matricula_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE prescolar.rol (
    id     NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    nombre VARCHAR2(50 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.rol
    ADD CONSTRAINT rol_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.rol
    ADD CONSTRAINT rol_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE prescolar.usuariointerno (
    id        NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    firstname VARCHAR2(50 BYTE) NOT NULL,
    lastname  VARCHAR2(50 BYTE) NOT NULL,
    idrol     NUMBER NOT NULL,
    email     VARCHAR2(100 BYTE) NOT NULL,
    password  VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE users LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE prescolar.usuariointerno
    ADD CONSTRAINT usuariointerno_pk PRIMARY KEY ( id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.usuariointerno
    ADD CONSTRAINT usuariointerno_email_un UNIQUE ( email )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE prescolar.usuariointerno
    ADD FOREIGN KEY ( idrol )
        REFERENCES prescolar.rol ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.grupo
    ADD FOREIGN KEY ( idprofesor )
        REFERENCES prescolar.profesor ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.estudiante
    ADD FOREIGN KEY ( idpadre )
        REFERENCES prescolar.padredefamilia ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.estudiante
    ADD FOREIGN KEY ( idgrupo )
        REFERENCES prescolar.grupo ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.matricula
    ADD FOREIGN KEY ( idestudiante )
        REFERENCES prescolar.estudiante ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.matricula
    ADD FOREIGN KEY ( idstatus )
        REFERENCES prescolar.estatus ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.anuncio
    ADD FOREIGN KEY ( idgrupo )
        REFERENCES prescolar.grupo ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.anuncio
    ADD FOREIGN KEY ( idusuariointerno )
        REFERENCES prescolar.usuariointerno ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.tarea
    ADD FOREIGN KEY ( idgrupo )
        REFERENCES prescolar.grupo ( id )
    NOT DEFERRABLE;

ALTER TABLE prescolar.tarea
    ADD FOREIGN KEY ( idprofesor )
        REFERENCES prescolar.profesor ( id )
    NOT DEFERRABLE;

CREATE OR REPLACE VIEW PRESCOLAR.V_ANUNCIOS_GRUPO ( CÓDIGO_ANUNCIO, TITULO_ANUNCIO, FECHA_PUBLICACION, CONTENIDO_ANUNCIO, NOMBRE_GRUPO ) AS
SELECT 
    a.Id AS Código_Anuncio,
    a.Title AS Titulo_Anuncio,
    a.DatePosted AS Fecha_Publicacion,
    a.Content AS Contenido_Anuncio,
    g.Nombre AS Nombre_Grupo
FROM Anuncio a
LEFT JOIN Grupo g ON a.IdGrupo = g.Id 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_ESTUDIANTES_ACTIVOS ( CÓDIGO_ESTUDIANTE, NOMBRE, APELLIDO, FECHA_MATRICULA ) AS
SELECT 
    e.Id AS Código_Estudiante,
    e.FirstName AS Nombre,
    e.LastName AS Apellido,
    m.EnrollmentDate AS Fecha_Matricula
FROM Estudiante e
LEFT JOIN Matricula m ON e.Id = m.IdEstudiante
WHERE m.IdStatus = (SELECT Id FROM Estatus WHERE Nombre = 'Cursando') 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_ESTUDIANTES_GRUPO ( CÓDIGO_ESTUDIANTE, NOMBRE, APELLIDO, GRUPO ) AS
SELECT 
    e.Id AS Código_Estudiante,
    e.FirstName AS Nombre,
    e.LastName AS Apellido,
    g.Nombre AS Grupo
FROM Estudiante e
LEFT JOIN Grupo g ON e.IdGrupo = g.Id 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_EVENTOS ( CÓDIGO_EVENTO, NOMBRE_EVENTO, FECHAEVENTO, ASISTENCIA ) AS
SELECT 
    e.Id AS Código_Evento,
    e.Nombre AS Nombre_Evento,
    e.Fecha AS FechaEvento,
    e.Grupo AS Asistencia
FROM Evento e 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_MATRICULAS_ESTUDIANTES ( CÓDIGO_MATRICULA, NOMBRE_ESTUDIANTE, APELLIDO, FECHA_MATRICULA, ESTADO_MATRICULA ) AS
SELECT 
    m.Id AS Código_Matricula,
    e.FirstName AS Nombre_Estudiante,
    e.LastName AS Apellido,
    m.EnrollmentDate AS Fecha_Matricula,
    s.Nombre AS Estado_Matricula
FROM Matricula m
LEFT JOIN Estudiante e ON m.IdEstudiante = e.Id
LEFT JOIN Estatus s ON m.IdStatus = s.Id 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_PADRES_ESTUDIANTES ( CÓDIGO_ESTUDIANTE, NOMBRE, APELLIDO, NOMBRE_PADRE, APELLIDO_PADRE ) AS
SELECT 
    e.Id AS Código_Estudiante,
    e.FirstName AS Nombre,
    e.LastName AS Apellido,
    p.FirstName AS Nombre_Padre,
    p.LastName AS Apellido_Padre
FROM Estudiante e
LEFT JOIN PadreDeFamilia p ON e.IdPadre = p.Id 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_PROFESORES_GRUPOS ( CÓDIGO_PROFESOR, NOMBRE, APELLIDO, GRUPO ) AS
SELECT 
    p.Id AS Código_Profesor,
    p.FirstName AS Nombre,
    p.LastName AS Apellido,
    g.Nombre AS Grupo
FROM Profesor p
LEFT JOIN Grupo g ON p.Id = g.IdProfesor 
;

CREATE OR REPLACE VIEW PRESCOLAR.V_TAREAS_GRUPOS ( CÓDIGO_TAREA, DESCRIPCION, FECHA_LIMITE, GRUPO, NOMBRE_PROFESOR ) AS
SELECT 
    t.Id AS Código_Tarea,
    t.Description AS Descripcion,
    t.DueDate AS Fecha_Limite,
    g.Nombre AS Grupo,
    p.FirstName || ' ' || p.LastName AS Nombre_Profesor
FROM Tarea t
LEFT JOIN Grupo g ON t.IdGrupo = g.Id
LEFT JOIN Profesor p ON t.IdProfesor = p.Id 
;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             27
-- CREATE VIEW                              8
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                        10
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              5
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
